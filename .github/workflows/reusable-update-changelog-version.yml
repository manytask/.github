name: "Update Changelog and Version"

on:
  workflow_call:
    inputs:
      release_tag:
        required: true
        type: string
      release_target:
        required: true
        type: string
      release_body:
        required: true
        type: string
      release_url:
        required: true
        type: string
    secrets:
      token:
        required: true


jobs:
  update_changelog_version:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.release_target }}
          token: ${{ secrets.token }}

#      - name: Setup git
#        run: |
#          git config --global user.name 'github-actions[bot]'
#          git config --global user.email 'manytask-service@users.noreply.github.com'

      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: ${{ inputs.release_tag }}
          release-notes: ${{ inputs.release_body }}
          heading-text: '[${{ inputs.release_tag }}](${{ inputs.release_url }})'

      - name: Update Version
        run: |
          echo -n "${{ inputs.release_tag }}" > VERSION

#      - name: Commit updated files
#        run: |
#          git add VERSION CHANGELOG.md
#          git commit -m "chore: auto version and changelog update (${{ github.ref_name }})" -m "[no ci]" || true
#          git push origin
#      - name: Tag new commit
#        run: |
#          git tag --force ${{ github.ref_name }}
#          git push origin ${{ github.ref_name }} --force

      - name: Commit updated CHANGELOG and VERSION files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ${{ inputs.release_target }}
          commit_message: 'chore(auto): update CHANGELOG and VERSION files with ${{ inputs.release_tag }} [skip ci]'
          file_pattern: 'CHANGELOG.md VERSION'
          push_options: '--force'

      - name: Move git tag to latest commit and push it
        run: |
          git tag --force ${{ inputs.release_tag }}
          git push origin ${{ inputs.release_tag }} --force
